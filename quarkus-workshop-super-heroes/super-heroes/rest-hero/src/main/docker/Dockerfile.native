####
# This Dockerfile is used in order to build a container that runs the Quarkus application in native (no JVM) mode
#
# Before building the container image run:
#
# ./mvnw package -Pnative
#
# Then, build the image with:
#
# docker build -f src/main/docker/Dockerfile.native -t quarkus/getting-started .
#
# Then run the container using:
#
# docker run -i --rm -p 8080:8080 quarkus/getting-started
#
###
FROM registry.access.redhat.com/ubi8/ubi-minimal:8.3


# Start Google Cloud SQL Proxy in Container to enable access to Google Cloud SQL (PostgreSQL)
# without Unix Sockets (works with Reactive PostgreSQL Client but incompatible with native executable)
# and without com.google.cloud.sql.postgres.SocketFactory (incompatible with the Reactive PostgreSQL Client).
ADD https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 /usr/local/bin/cloud_sql_proxy
RUN chmod "ogu+x" /usr/local/bin/cloud_sql_proxy && \
    chown 1001 /usr/local/bin/cloud_sql_proxy
RUN mkdir /work/ && \
    echo "#!/bin/sh" > /work/run.sh && \
    echo "cloud_sql_proxy -instances=\$SERVICE_REST_HERO_DATASOURCE_INSTANCE_CONNECTION_NAME=tcp:5432 &" >> /work/run.sh && \
    echo "./application -Dquarkus.http.host=0.0.0.0" >> /work/run.sh && \
    chmod "ogu+x" /work/run.sh && \
    chown 1001 /work/run.sh


WORKDIR /work/
RUN chown 1001 /work \
    && chmod "g+rwX" /work \
    && chown 1001:root /work
COPY --chown=1001:root target/*-runner /work/application

ARG PORT=8080
ENV PORT="${PORT}"
EXPOSE ${PORT}


USER 1001

ENTRYPOINT [ "/work/run.sh" ]
#CMD ["./application", "-Dquarkus.http.host=0.0.0.0"]
