[
{
  "name":"byte[]"
},
{
  "name":"com.arjuna.ats.arjuna.common.CoordinatorEnvironmentBean",
  "allDeclaredFields":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] },
    {"name":"getCheckedActionFactory","parameterTypes":[] },
    {"name":"getCheckedActionFactoryClassName","parameterTypes":[] },
    {"name":"getCommunicationStore","parameterTypes":[] },
    {"name":"getDefaultTimeout","parameterTypes":[] },
    {"name":"getDynamic1PC","parameterTypes":[] },
    {"name":"getMaxTwoPhaseCommitThreads","parameterTypes":[] },
    {"name":"getTxReaperCancelFailWaitPeriod","parameterTypes":[] },
    {"name":"getTxReaperCancelWaitPeriod","parameterTypes":[] },
    {"name":"getTxReaperMode","parameterTypes":[] },
    {"name":"getTxReaperTimeout","parameterTypes":[] },
    {"name":"getTxReaperZombieMax","parameterTypes":[] },
    {"name":"isAllowCheckedActionFactoryOverride","parameterTypes":[] },
    {"name":"isAlternativeRecordOrdering","parameterTypes":[] },
    {"name":"isAsyncAfterSynchronization","parameterTypes":[] },
    {"name":"isAsyncBeforeSynchronization","parameterTypes":[] },
    {"name":"isAsyncCommit","parameterTypes":[] },
    {"name":"isAsyncPrepare","parameterTypes":[] },
    {"name":"isAsyncRollback","parameterTypes":[] },
    {"name":"isBeforeCompletionWhenRollbackOnly","parameterTypes":[] },
    {"name":"isClassicPrepare","parameterTypes":[] },
    {"name":"isCommitOnePhase","parameterTypes":[] },
    {"name":"isEnableStatistics","parameterTypes":[] },
    {"name":"isFinalizeBasicActions","parameterTypes":[] },
    {"name":"isMaintainHeuristics","parameterTypes":[] },
    {"name":"isReadonlyOptimisation","parameterTypes":[] },
    {"name":"isSharedTransactionLog","parameterTypes":[] },
    {"name":"isStartDisabled","parameterTypes":[] },
    {"name":"isTransactionStatusManagerEnable","parameterTypes":[] },
    {"name":"isWriteOptimisation","parameterTypes":[] },
    {"name":"setAllowCheckedActionFactoryOverride","parameterTypes":["boolean"] },
    {"name":"setAlternativeRecordOrdering","parameterTypes":["boolean"] },
    {"name":"setAsyncAfterSynchronization","parameterTypes":["boolean"] },
    {"name":"setAsyncBeforeSynchronization","parameterTypes":["boolean"] },
    {"name":"setAsyncCommit","parameterTypes":["boolean"] },
    {"name":"setAsyncPrepare","parameterTypes":["boolean"] },
    {"name":"setAsyncRollback","parameterTypes":["boolean"] },
    {"name":"setBeforeCompletionWhenRollbackOnly","parameterTypes":["boolean"] },
    {"name":"setCheckedActionFactory","parameterTypes":["com.arjuna.ats.arjuna.coordinator.CheckedActionFactory"] },
    {"name":"setCheckedActionFactoryClassName","parameterTypes":["java.lang.String"] },
    {"name":"setClassicPrepare","parameterTypes":["boolean"] },
    {"name":"setCommitOnePhase","parameterTypes":["boolean"] },
    {"name":"setCommunicationStore","parameterTypes":["java.lang.String"] },
    {"name":"setDefaultTimeout","parameterTypes":["int"] },
    {"name":"setDynamic1PC","parameterTypes":["boolean"] },
    {"name":"setEnableStatistics","parameterTypes":["boolean"] },
    {"name":"setFinalizeBasicActions","parameterTypes":["boolean"] },
    {"name":"setMaintainHeuristics","parameterTypes":["boolean"] },
    {"name":"setMaxTwoPhaseCommitThreads","parameterTypes":["int"] },
    {"name":"setReadonlyOptimisation","parameterTypes":["boolean"] },
    {"name":"setSharedTransactionLog","parameterTypes":["boolean"] },
    {"name":"setStartDisabled","parameterTypes":["boolean"] },
    {"name":"setTransactionStatusManagerEnable","parameterTypes":["boolean"] },
    {"name":"setTxReaperCancelFailWaitPeriod","parameterTypes":["long"] },
    {"name":"setTxReaperCancelWaitPeriod","parameterTypes":["long"] },
    {"name":"setTxReaperMode","parameterTypes":["java.lang.String"] },
    {"name":"setTxReaperTimeout","parameterTypes":["long"] },
    {"name":"setTxReaperZombieMax","parameterTypes":["int"] },
    {"name":"setWriteOptimisation","parameterTypes":["boolean"] }
  ]
},
{
  "name":"com.arjuna.ats.arjuna.common.CoreEnvironmentBean",
  "allDeclaredFields":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] },
    {"name":"getNodeIdentifier","parameterTypes":[] },
    {"name":"getPid","parameterTypes":[] },
    {"name":"getProcessImplementation","parameterTypes":[] },
    {"name":"getProcessImplementationClassName","parameterTypes":[] },
    {"name":"getSocketProcessIdMaxPorts","parameterTypes":[] },
    {"name":"getSocketProcessIdPort","parameterTypes":[] },
    {"name":"getTimeoutFactor","parameterTypes":[] },
    {"name":"getVarDir","parameterTypes":[] },
    {"name":"isAllowMultipleLastResources","parameterTypes":[] },
    {"name":"isDisableMultipleLastResourcesWarning","parameterTypes":[] },
    {"name":"setAllowMultipleLastResources","parameterTypes":["boolean"] },
    {"name":"setDisableMultipleLastResourcesWarning","parameterTypes":["boolean"] },
    {"name":"setNodeIdentifier","parameterTypes":["java.lang.String"] },
    {"name":"setPid","parameterTypes":["int"] },
    {"name":"setProcessImplementation","parameterTypes":["com.arjuna.ats.arjuna.utils.Process"] },
    {"name":"setProcessImplementationClassName","parameterTypes":["java.lang.String"] },
    {"name":"setSocketProcessIdMaxPorts","parameterTypes":["int"] },
    {"name":"setSocketProcessIdPort","parameterTypes":["int"] },
    {"name":"setTimeoutFactor","parameterTypes":["int"] },
    {"name":"setVarDir","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"com.arjuna.ats.jta.resources.LastResourceCommitOptimisation"
},
{
  "name":"com.arjuna.common.util.propertyservice.PropertiesFactory",
  "fields":[{"name":"delegatePropertiesFactory"}]
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef",
  "fields":[{"name":"drainStatus", "allowUnsafeAccess":true}]
},
{
  "name":"com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit", "allowUnsafeAccess":true}]
},
{
  "name":"com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"com.github.benmanes.caffeine.cache.PS",
  "fields":[
    {"name":"key", "allowUnsafeAccess":true},
    {"name":"value", "allowUnsafeAccess":true}
  ]
},
{
  "name":"com.github.benmanes.caffeine.cache.PSW",
  "fields":[{"name":"writeTime", "allowUnsafeAccess":true}]
},
{
  "name":"com.github.benmanes.caffeine.cache.PSWMS",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.benmanes.caffeine.cache.SSMSA",
  "methods":[{"name":"<init>","parameterTypes":["com.github.benmanes.caffeine.cache.Caffeine","com.github.benmanes.caffeine.cache.CacheLoader","boolean"] }]
},
{
  "name":"com.github.benmanes.caffeine.cache.StripedBuffer",
  "fields":[{"name":"tableBusy", "allowUnsafeAccess":true}]
},
{
  "name":"com.google.api.client.googleapis.services.AbstractGoogleClientRequest",
  "allDeclaredFields":true
},
{
  "name":"com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest",
  "allDeclaredFields":true
},
{
  "name":"com.google.api.client.http.GenericUrl",
  "allDeclaredFields":true
},
{
  "name":"com.google.api.client.http.HttpHeaders",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.google.api.client.json.GenericJson",
  "allDeclaredFields":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.google.api.client.json.webtoken.JsonWebSignature$Header",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.google.api.client.json.webtoken.JsonWebToken$Header",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.google.api.client.json.webtoken.JsonWebToken$Payload",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.google.api.client.util.GenericData",
  "allDeclaredFields":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.google.api.services.sqladmin.SQLAdmin$Instances$Get",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.google.api.services.sqladmin.SQLAdmin$SslCerts$CreateEphemeral",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.google.api.services.sqladmin.SQLAdminRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.google.api.services.sqladmin.model.BackupConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.google.api.services.sqladmin.model.BackupRetentionSettings",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.google.api.services.sqladmin.model.DatabaseInstance",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.google.api.services.sqladmin.model.IpConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.google.api.services.sqladmin.model.IpMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.google.api.services.sqladmin.model.LocationPreference",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.google.api.services.sqladmin.model.Settings",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.google.api.services.sqladmin.model.SslCert",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.google.api.services.sqladmin.model.SslCertsCreateEphemeralRequest",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.google.cloud.sql.postgres.SocketFactory",
  "methods":[{"name":"<init>","parameterTypes":["java.util.Properties"] }]
},
{
  "name":"com.google.common.util.concurrent.AbstractFuture",
  "fields":[
    {"name":"listeners", "allowUnsafeAccess":true},
    {"name":"value", "allowUnsafeAccess":true},
    {"name":"waiters", "allowUnsafeAccess":true}
  ]
},
{
  "name":"com.google.common.util.concurrent.AbstractFuture$Waiter",
  "fields":[
    {"name":"next", "allowUnsafeAccess":true},
    {"name":"thread", "allowUnsafeAccess":true}
  ]
},
{
  "name":"com.sun.crypto.provider.AESCipher$General",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DHParameters",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.PBEKeyFactory$PBEWithMD5AndDES",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.PBEParameters",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.PKCS12PBECipherCore$PBEWithSHA1AndDESede",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.TlsKeyMaterialGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.TlsMasterSecretGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.TlsPrfGenerator$V12",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.agroal.pool.ConnectionHandler[]"
},
{
  "name":"io.netty.bootstrap.ServerBootstrap$1"
},
{
  "name":"io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
  "methods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]
},
{
  "name":"io.netty.buffer.AbstractByteBufAllocator",
  "allDeclaredMethods":true
},
{
  "name":"io.netty.buffer.AbstractReferenceCountedByteBuf",
  "fields":[{"name":"refCnt", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.channel.ChannelDuplexHandler",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] },
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] },
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.channel.ChannelHandlerAdapter",
  "methods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.netty.channel.ChannelInboundHandlerAdapter",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] },
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.netty.channel.ChannelInitializer",
  "methods":[
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]
},
{
  "name":"io.netty.channel.ChannelOutboundHandlerAdapter",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] },
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] },
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$HeadContext",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] },
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] },
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] },
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$TailContext",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] },
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.netty.handler.codec.ByteToMessageDecoder",
  "methods":[
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]
},
{
  "name":"io.netty.handler.codec.MessageToMessageEncoder",
  "methods":[{"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.handler.codec.http.HttpObjectDecoder",
  "methods":[{"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler",
  "methods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.handler.timeout.IdleStateHandler",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.util.ReferenceCountUtil",
  "allDeclaredMethods":true
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
  "fields":[{"name":"consumerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
  "fields":[{"name":"producerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
  "fields":[{"name":"producerLimit", "allowUnsafeAccess":true}]
},
{
  "name":"io.quarkus.agroal.runtime.JdbcDriver",
  "allDeclaredMethods":true
},
{
  "name":"io.quarkus.hibernate.orm.panache.PanacheEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.quarkus.hibernate.orm.panache.PanacheEntityBase",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.quarkus.hibernate.orm.runtime.customized.QuarkusConnectionProvider",
  "allPublicMethods":true
},
{
  "name":"io.quarkus.hibernate.orm.runtime.customized.QuarkusJtaPlatform",
  "allPublicMethods":true
},
{
  "name":"io.quarkus.hibernate.orm.runtime.customized.QuarkusRuntimeProxyFactoryFactory",
  "allPublicMethods":true
},
{
  "name":"io.quarkus.hibernate.orm.runtime.service.CfgXmlAccessServiceInitiatorQuarkus$1",
  "allPublicMethods":true
},
{
  "name":"io.quarkus.hibernate.validator.runtime.interceptor.AbstractMethodValidationInterceptor",
  "fields":[{"name":"validator"}]
},
{
  "name":"io.quarkus.hibernate.validator.runtime.interceptor.MethodValidated",
  "allDeclaredMethods":true
},
{
  "name":"io.quarkus.hibernate.validator.runtime.jaxrs.JaxrsEndPointValidated",
  "allDeclaredMethods":true
},
{
  "name":"io.quarkus.runner.ApplicationImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.smallrye.health.api.Wellness",
  "allDeclaredMethods":true
},
{
  "name":"io.smallrye.openapi.runtime.io.IoLogging_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"io.vertx.core.http.impl.Http1xOrH2CHandler",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.vertx.core.http.impl.Http1xUpgradeToH2CHandler",
  "methods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.vertx.core.http.impl.HttpServerChannelInitializer$1",
  "methods":[
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] },
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.vertx.core.http.impl.HttpServerImpl$1"
},
{
  "name":"io.vertx.core.http.impl.VertxHttpRequestDecoder"
},
{
  "name":"io.vertx.core.http.impl.VertxHttpResponseEncoder"
},
{
  "name":"io.vertx.core.net.impl.VertxHandler",
  "methods":[
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] },
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"java.lang.Object",
  "allDeclaredFields":true
},
{
  "name":"java.lang.String"
},
{
  "name":"java.lang.String[]"
},
{
  "name":"java.lang.Thread",
  "fields":[
    {"name":"contextClassLoader", "allowUnsafeAccess":true},
    {"name":"inheritableThreadLocals", "allowUnsafeAccess":true},
    {"name":"threadLocalRandomProbe", "allowUnsafeAccess":true},
    {"name":"threadLocals", "allowUnsafeAccess":true}
  ]
},
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]
},
{
  "name":"java.lang.management.RuntimeMXBean",
  "methods":[
    {"name":"getInputArguments","parameterTypes":[] },
    {"name":"getName","parameterTypes":[] }
  ]
},
{
  "name":"java.nio.Bits",
  "fields":[{"name":"UNALIGNED"}]
},
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address", "allowUnsafeAccess":true}]
},
{
  "name":"java.nio.DirectByteBuffer",
  "methods":[{"name":"<init>","parameterTypes":["long","int"] }]
},
{
  "name":"java.security.AlgorithmParametersSpi"
},
{
  "name":"java.security.KeyStoreSpi"
},
{
  "name":"java.security.SecureRandomParameters"
},
{
  "name":"java.security.interfaces.ECPrivateKey"
},
{
  "name":"java.security.interfaces.ECPublicKey"
},
{
  "name":"java.security.interfaces.RSAPrivateKey"
},
{
  "name":"java.security.interfaces.RSAPublicKey"
},
{
  "name":"java.sql.Date"
},
{
  "name":"java.sql.Timestamp"
},
{
  "name":"java.util.AbstractCollection",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.util.AbstractList",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.util.AbstractMap",
  "allDeclaredFields":true
},
{
  "name":"java.util.ArrayList",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.util.Date"
},
{
  "name":"javax.enterprise.context.BeforeDestroyed",
  "allDeclaredMethods":true
},
{
  "name":"javax.enterprise.context.Destroyed",
  "allDeclaredMethods":true
},
{
  "name":"javax.enterprise.inject.Any",
  "allDeclaredMethods":true
},
{
  "name":"javax.enterprise.inject.Default",
  "allDeclaredMethods":true
},
{
  "name":"javax.enterprise.inject.spi.BeanManager"
},
{
  "name":"javax.net.ssl.SSLEngine",
  "methods":[{"name":"getApplicationProtocol","parameterTypes":[] }]
},
{
  "name":"javax.security.auth.x500.X500Principal",
  "fields":[{"name":"thisX500Name"}],
  "methods":[{"name":"<init>","parameterTypes":["sun.security.x509.X500Name"] }]
},
{
  "name":"javax.transaction.Transactional",
  "allDeclaredMethods":true
},
{
  "name":"javax.validation.ConstraintViolation"
},
{
  "name":"javax.ws.rs.container.ContainerRequestFilter[]"
},
{
  "name":"javax.ws.rs.container.ContainerResponseFilter[]"
},
{
  "name":"javax.ws.rs.ext.WriterInterceptor[]"
},
{
  "name":"jdk.internal.misc.Unsafe",
  "methods":[{"name":"getUnsafe","parameterTypes":[] }]
},
{
  "name":"org.eclipse.microprofile.health.Health",
  "allDeclaredMethods":true
},
{
  "name":"org.eclipse.microprofile.health.Liveness",
  "allDeclaredMethods":true
},
{
  "name":"org.eclipse.microprofile.health.Readiness",
  "allDeclaredMethods":true
},
{
  "name":"org.eclipse.microprofile.metrics.annotation.Counted",
  "allDeclaredMethods":true
},
{
  "name":"org.eclipse.microprofile.metrics.annotation.Timed",
  "allDeclaredMethods":true
},
{
  "name":"org.glassfish.json.JsonProviderImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.annotations.common.reflection.ReflectionManager",
  "methods":[{"name":"reset","parameterTypes":[] }]
},
{
  "name":"org.hibernate.annotations.common.reflection.java.JavaReflectionManager",
  "methods":[{"name":"getXAnnotatedElement","parameterTypes":["java.lang.Package"] }]
},
{
  "name":"org.hibernate.annotations.common.reflection.java.JavaXMember",
  "methods":[{"name":"getMember","parameterTypes":[] }]
},
{
  "name":"org.hibernate.bytecode.internal.none.BytecodeProviderImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.cache.internal.EnabledCaching",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.cfg.beanvalidation.TypeSafeActivator",
  "methods":[{"name":"activate","parameterTypes":["org.hibernate.cfg.beanvalidation.ActivationContext"] }]
},
{
  "name":"org.hibernate.engine.config.internal.ConfigurationServiceImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.internal.JdbcServicesImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.engine.jndi.internal.JndiServiceImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.engine.query.internal.NativeQueryInterpreterStandardImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.engine.spi.Managed",
  "allDeclaredMethods":true
},
{
  "name":"org.hibernate.engine.spi.ManagedEntity",
  "allDeclaredMethods":true
},
{
  "name":"org.hibernate.engine.spi.ManagedMappedSuperclass",
  "allDeclaredMethods":true
},
{
  "name":"org.hibernate.engine.spi.PersistentAttributeInterceptable",
  "allDeclaredMethods":true
},
{
  "name":"org.hibernate.engine.spi.SelfDirtinessTracker",
  "allDeclaredMethods":true
},
{
  "name":"org.hibernate.event.service.internal.EventListenerRegistryImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.event.spi.AutoFlushEventListener[]"
},
{
  "name":"org.hibernate.event.spi.DeleteEventListener[]"
},
{
  "name":"org.hibernate.event.spi.DirtyCheckEventListener[]"
},
{
  "name":"org.hibernate.event.spi.EventType",
  "allDeclaredFields":true
},
{
  "name":"org.hibernate.event.spi.EvictEventListener[]"
},
{
  "name":"org.hibernate.event.spi.FlushEntityEventListener[]"
},
{
  "name":"org.hibernate.event.spi.FlushEventListener[]"
},
{
  "name":"org.hibernate.event.spi.InitializeCollectionEventListener[]"
},
{
  "name":"org.hibernate.event.spi.LoadEventListener[]"
},
{
  "name":"org.hibernate.event.spi.LockEventListener[]"
},
{
  "name":"org.hibernate.event.spi.MergeEventListener[]"
},
{
  "name":"org.hibernate.event.spi.PersistEventListener[]"
},
{
  "name":"org.hibernate.event.spi.PostDeleteEventListener[]"
},
{
  "name":"org.hibernate.event.spi.PostInsertEventListener[]"
},
{
  "name":"org.hibernate.event.spi.PostLoadEventListener[]"
},
{
  "name":"org.hibernate.event.spi.PostUpdateEventListener[]"
},
{
  "name":"org.hibernate.event.spi.PreDeleteEventListener[]"
},
{
  "name":"org.hibernate.event.spi.PreInsertEventListener[]"
},
{
  "name":"org.hibernate.event.spi.PreLoadEventListener[]"
},
{
  "name":"org.hibernate.event.spi.PreUpdateEventListener[]"
},
{
  "name":"org.hibernate.event.spi.RefreshEventListener[]"
},
{
  "name":"org.hibernate.event.spi.ReplicateEventListener[]"
},
{
  "name":"org.hibernate.event.spi.ResolveNaturalIdEventListener[]"
},
{
  "name":"org.hibernate.event.spi.SaveOrUpdateEventListener[]"
},
{
  "name":"org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.hql.internal.ast.HqlToken",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.CountNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.DotNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.FromClause",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.FromElement",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.IdentNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.Node",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.QueryNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.SelectClause",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.SelectExpressionImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.SqlFragment",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.SqlNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.internal.CoreMessageLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.internal.EntityManagerMessageLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.jmx.internal.DisabledJmxServiceImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.persister.entity.SingleTableEntityPersister",
  "methods":[{"name":"<init>","parameterTypes":["org.hibernate.mapping.PersistentClass","org.hibernate.cache.spi.access.EntityDataAccess","org.hibernate.cache.spi.access.NaturalIdDataAccess","org.hibernate.persister.spi.PersisterCreationContext"] }]
},
{
  "name":"org.hibernate.persister.internal.PersisterFactoryImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.persister.internal.StandardPersisterClassResolver",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.property.access.internal.PropertyAccessStrategyResolverStandardImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.resource.beans.internal.BeansMessageLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.service.internal.SessionFactoryServiceRegistryFactoryImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.stat.internal.StatisticsImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.tool.schema.internal.HibernateSchemaManagementTool",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.tuple.entity.PojoEntityTuplizer",
  "methods":[{"name":"<init>","parameterTypes":["org.hibernate.tuple.entity.EntityMetamodel","org.hibernate.mapping.PersistentClass"] }]
},
{
  "name":"org.infinispan.quarkus.hibernate.cache.QuarkusInfinispanRegionFactory",
  "allPublicMethods":true
},
{
  "name":"org.jboss.resteasy.core.AcceptHeaderByFileSuffixFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.jboss.resteasy.microprofile.config.FilterConfigSourceImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jboss.resteasy.microprofile.config.ServletConfigSourceImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jboss.resteasy.microprofile.config.ServletContextConfigSourceImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jboss.resteasy.resteasy_jaxrs.i18n.Messages_$bundle",
  "fields":[{"name":"INSTANCE"}]
},
{
  "name":"org.jboss.threads.EnhancedQueueExecutor",
  "fields":[
    {"name":"activeCount", "allowUnsafeAccess":true},
    {"name":"peakQueueSize", "allowUnsafeAccess":true},
    {"name":"peakThreadCount", "allowUnsafeAccess":true},
    {"name":"queueSize", "allowUnsafeAccess":true},
    {"name":"sequence"},
    {"name":"terminationWaiters", "allowUnsafeAccess":true}
  ]
},
{
  "name":"org.jboss.threads.EnhancedQueueExecutor$PoolThreadNode",
  "fields":[
    {"name":"parked", "allowUnsafeAccess":true},
    {"name":"task", "allowUnsafeAccess":true}
  ]
},
{
  "name":"org.jboss.threads.EnhancedQueueExecutor$QNode",
  "fields":[{"name":"next", "allowUnsafeAccess":true}]
},
{
  "name":"org.jboss.threads.EnhancedQueueExecutorBase1",
  "fields":[{"name":"tail", "allowUnsafeAccess":true}]
},
{
  "name":"org.jboss.threads.EnhancedQueueExecutorBase3",
  "fields":[{"name":"head", "allowUnsafeAccess":true}]
},
{
  "name":"org.jboss.threads.EnhancedQueueExecutorBase5",
  "fields":[{"name":"threadStatus", "allowUnsafeAccess":true}]
},
{
  "name":"org.jboss.threads.Messages_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.postgresql.Driver",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.postgresql.PGProperty",
  "fields":[
    {"name":"ALLOW_ENCODING_CHANGES"},
    {"name":"APPLICATION_NAME"},
    {"name":"ASSUME_MIN_SERVER_VERSION"},
    {"name":"AUTOSAVE"},
    {"name":"BINARY_TRANSFER"},
    {"name":"BINARY_TRANSFER_DISABLE"},
    {"name":"BINARY_TRANSFER_ENABLE"},
    {"name":"CANCEL_SIGNAL_TIMEOUT"},
    {"name":"CLEANUP_SAVEPOINTS"},
    {"name":"CONNECT_TIMEOUT"},
    {"name":"CURRENT_SCHEMA"},
    {"name":"DATABASE_METADATA_CACHE_FIELDS"},
    {"name":"DATABASE_METADATA_CACHE_FIELDS_MIB"},
    {"name":"DEFAULT_ROW_FETCH_SIZE"},
    {"name":"DISABLE_COLUMN_SANITISER"},
    {"name":"ESCAPE_SYNTAX_CALL_MODE"},
    {"name":"GSS_ENC_MODE"},
    {"name":"GSS_LIB"},
    {"name":"HIDE_UNPRIVILEGED_OBJECTS"},
    {"name":"HOST_RECHECK_SECONDS"},
    {"name":"JAAS_APPLICATION_NAME"},
    {"name":"JAAS_LOGIN"},
    {"name":"KERBEROS_SERVER_NAME"},
    {"name":"LOAD_BALANCE_HOSTS"},
    {"name":"LOGGER_FILE"},
    {"name":"LOGGER_LEVEL"},
    {"name":"LOGIN_TIMEOUT"},
    {"name":"LOG_SERVER_ERROR_DETAIL"},
    {"name":"LOG_UNCLOSED_CONNECTIONS"},
    {"name":"MAX_RESULT_BUFFER"},
    {"name":"OPTIONS"},
    {"name":"PASSWORD"},
    {"name":"PG_DBNAME"},
    {"name":"PG_HOST"},
    {"name":"PG_PORT"},
    {"name":"PREFER_QUERY_MODE"},
    {"name":"PREPARED_STATEMENT_CACHE_QUERIES"},
    {"name":"PREPARED_STATEMENT_CACHE_SIZE_MIB"},
    {"name":"PREPARE_THRESHOLD"},
    {"name":"PROTOCOL_VERSION"},
    {"name":"READ_ONLY"},
    {"name":"READ_ONLY_MODE"},
    {"name":"RECEIVE_BUFFER_SIZE"},
    {"name":"REPLICATION"},
    {"name":"REWRITE_BATCHED_INSERTS"},
    {"name":"SEND_BUFFER_SIZE"},
    {"name":"SOCKET_FACTORY"},
    {"name":"SOCKET_FACTORY_ARG"},
    {"name":"SOCKET_TIMEOUT"},
    {"name":"SSL"},
    {"name":"SSL_CERT"},
    {"name":"SSL_FACTORY"},
    {"name":"SSL_FACTORY_ARG"},
    {"name":"SSL_HOSTNAME_VERIFIER"},
    {"name":"SSL_KEY"},
    {"name":"SSL_MODE"},
    {"name":"SSL_PASSWORD"},
    {"name":"SSL_PASSWORD_CALLBACK"},
    {"name":"SSL_ROOT_CERT"},
    {"name":"SSPI_SERVICE_CLASS"},
    {"name":"STRING_TYPE"},
    {"name":"TARGET_SERVER_TYPE"},
    {"name":"TCP_KEEP_ALIVE"},
    {"name":"UNKNOWN_LENGTH"},
    {"name":"USER"},
    {"name":"USE_SPNEGO"},
    {"name":"XML_FACTORY_FACTORY"}
  ]
},
{
  "name":"sun.misc.Unsafe",
  "allDeclaredFields":true,
  "methods":[
    {"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] },
    {"name":"getAndAddLong","parameterTypes":["java.lang.Object","long","long"] },
    {"name":"getAndSetObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] },
    {"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }
  ]
},
{
  "name":"sun.nio.ch.SelectorImpl",
  "fields":[
    {"name":"publicSelectedKeys", "allowUnsafeAccess":true},
    {"name":"selectedKeys", "allowUnsafeAccess":true}
  ]
},
{
  "name":"sun.security.pkcs.SignerInfo[]"
},
{
  "name":"sun.security.pkcs12.PKCS12KeyStore",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DSA$SHA224withDSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DSA$SHA256withDSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.JavaKeyStore$DualFormatJKS",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.JavaKeyStore$JKS",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.MD5",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.NativePRNG",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA224",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA5$SHA384",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA5$SHA512",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.X509Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.certpath.PKIXCertPathValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAKeyFactory$Legacy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAKeyPairGenerator$Legacy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAPSSSignature",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSASignature$SHA224withRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSASignature$SHA256withRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.KeyManagerFactoryImpl$SunX509",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.SSLContextImpl$DefaultSSLContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.SSLContextImpl$TLS12Context",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.SSLContextImpl$TLSContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.util.ObjectIdentifier"
},
{
  "name":"sun.security.x509.AuthorityInfoAccessExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.AuthorityKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.BasicConstraintsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CRLDistributionPointsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CertificateExtensions"
},
{
  "name":"sun.security.x509.CertificatePoliciesExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.ExtendedKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.KeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.NameConstraintsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.NetscapeCertTypeExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.PrivateKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.SubjectAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.SubjectKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
}
]
