# Run gitlab-env.sh to print variables required in GitLab CI.

# This GitLab CI pipeline triggers Google Cloud Build on changes:
# - Provisioning of infrastructure
# - Building of services
# - Deployment of services
#
# Triggering the builds is required because the GitLab repository is not available on the Internet
# so that we cannot add triggers to Google Cloud Build.
#
# The actual workflow steps should be implemented in scripts to avoid a strong dependency on Google Cloud Build.

image: alpine

stages:
  - prepare
  - deploy services

variables:
  PROJECT_DIR: /quarkus-workshop-super-heroes

infrastructure:
  stage: prepare
  trigger:
    include: $PROJECT_DIR/infrastructure/.gitlab-ci.yml
    strategy: depend
  only:
    refs:
      - branches
    changes:
      - $PROJECT_DIR/infrastructure/


build villain service:
  stage: prepare
  variables:
    TARGET: build
    SERVICE_NAME: rest-villain
    SERVICE_DIR: $PROJECT_DIR/super-heroes/$SERVICE_NAME
  trigger:
    include: $SERVICE_DIR/deployment/gcp/.gitlab-ci.yml
    strategy: depend
  only:
    refs:
      - branches
    changes:
      - $SERVICE_DIR/


deploy villain service:
  stage: deploy services
  needs:
    - build villain service
    - infrastructure
  variables:
    TARGET: deploy
    SERVICE_NAME: rest-villain
    SERVICE_DIR: $PROJECT_DIR/super-heroes/$SERVICE_NAME
  trigger:
    include: $SERVICE_DIR/deployment/gcp/.gitlab-ci.yml
    strategy: depend
  only:
    refs:
      - branches
    changes:
      - $SERVICE_DIR/
      - $PROJECT_DIR/infrastructure/


# https://docs.gitlab.com/ee/ci/environments

#  script:
#    - DYNAMIC_ENVIRONMENT_URL=$(deploy-script)                                 # In script, get the environment URL.
#    - echo "DYNAMIC_ENVIRONMENT_URL=$DYNAMIC_ENVIRONMENT_URL" >> deploy.env    # Add the value to a dotenv file.
#  artifacts:
#    reports:
#      dotenv: deploy.env                                                       # Report back dotenv file to rails.
#  environment:
#    name: review/$CI_COMMIT_REF_SLUG
#    url: $DYNAMIC_ENVIRONMENT_URL                                              # and set the variable produced in script to `environment:url`
#    on_stop: stop_review
#
