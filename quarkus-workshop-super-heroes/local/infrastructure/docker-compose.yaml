version: "3.8"

services:
    database:
        image: "postgres:11.2"
        container_name: "super-database"
        ports:
            - "5432:5432"
        volumes:
            - ./db-init/initialize-databases.sql:/docker-entrypoint-initdb.d/init.sql

    mongodb:
        image: mongo
        container_name: mongodb
        environment:
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=pass12345
        volumes:
            - /srv/mongodb-data:/data/db
        networks:
            - mongodb_network
        ports:
            - 27017:27017
        healthcheck:
            test: echo 'db.runCommand("ping").ok' | mongo 10.10.10.60:27017/test --quiet
            interval: 30s
            timeout: 10s
            retries: 3
        restart: unless-stopped

    mongo-express:
        image: mongo-express
        container_name: mongo-express
        environment:
            - ME_CONFIG_MONGODB_SERVER=mongodb
            - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
            - ME_CONFIG_MONGODB_ADMINUSERNAME=root
            - ME_CONFIG_MONGODB_ADMINPASSWORD=pass12345
            - ME_CONFIG_BASICAUTH_USERNAME=admin
            - ME_CONFIG_BASICAUTH_PASSWORD=admin123
        volumes:
            - mongodb-data
        depends_on:
            - mongodb
        networks:
            - mongodb_network
        ports:
            - 8081:8081
        healthcheck:
            test:  wget --quiet --tries=3 --spider http://admin:admin123@10.10.10.60:8081 || exit 1
            interval: 30s
            timeout: 10s
            retries: 3
        restart: unless-stopped

    monitoring:
        image: "prom/prometheus"
        network_mode: 'host' # On Linux, this is required to let Prometheus access the other containers.
        container_name: "super-visor"
        ports:
          - 9090:9090
        volumes:
          - ./monitoring/prometheus-linux.yml:/etc/prometheus/prometheus.yml

    zookeeper:
        image: strimzi/kafka:0.11.3-kafka-2.1.0
        command: [
            "sh", "-c",
            "bin/zookeeper-server-start.sh config/zookeeper.properties"
        ]
        ports:
            - "2181:2181"
        environment:
            LOG_DIR: /tmp/logs

    kafka:
        image: strimzi/kafka:0.11.3-kafka-2.1.0
        command: [
            "sh", "-c",
            "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
        ]
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
        environment:
            LOG_DIR: "/tmp/logs"
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
            KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

volumes:
    mongodb-data:
        name: mongodb-data

networks:
    mongodb_network:
        name: mongodb_network
